(dp1
S'output'
p2
S'<class \'gluon.contrib.pymysql.err.ProgrammingError\'> (1064, u"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'\' at line 1")'
p3
sS'layer'
p4
S'/Users/sepehrtaheri/PycharmProjects/listEmAlpha/web2py/applications/listemAlpha/controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n# ########################################################################\n## This is a sample controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - call exposes all registered services (none by default)\n#########################################################################\n\n\ndef index():\n    if not auth.is_logged_in():\n        print \'logged out home\'\n        response.flash = T("Welcome to web2py!")\n        return dict(message=T(\'Hello World\'))\n    if auth.is_logged_in():\n        print \'logged in home\'\n        response.flash = T("Welcome to web2py!")\n        query = (db.vancouver)\n        sortorder = [db.vancouver.dateCreated]\n        exportclasses=dict(\n                csv_with_hidden_cols=False,\n                xml=False,\n                html=False,\n                csv=False,\n                json=False,\n                tsv_with_hidden_cols=False,\n                tsv=False)\n        ads = SQLFORM.grid(query=query, deletable=False, editable=False,\n                           orderby=sortorder, paginate=50, exportclasses=exportclasses, maxtextlength=64)\n        return dict(message=T(\'ExpressAds\'), content=ads)\n\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    http://..../[app]/default/user/manage_users (requires membership in\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\n\n@cache.action()\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request, db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\n@auth.requires_signature()\ndef data():\n    """\n    http://..../[app]/default/data/tables\n    http://..../[app]/default/data/create/[table]\n    http://..../[app]/default/data/read/[table]/[id]\n    http://..../[app]/default/data/update/[table]/[id]\n    http://..../[app]/default/data/delete/[table]/[id]\n    http://..../[app]/default/data/select/[table]\n    http://..../[app]/default/data/search/[table]\n    but URLs must be signed, i.e. linked with\n      A(\'table\',_href=URL(\'data/tables\',user_signature=True))\n    or with the signed load operator\n      LOAD(\'default\',\'data.load\',args=\'tables\',ajax=True,user_signature=True)\n    """\n    return dict(form=crud())\n\n@auth.requires_login()\ndef profile():\n    query = ((db.vancouver.user_id == auth.user.id))\n    sortorder = [db.vancouver.dateCreated]\n    exportclasses=dict(\n            csv_with_hidden_cols=False,\n            xml=False,\n            html=False,\n            csv=False,\n            json=False,\n            tsv_with_hidden_cols=False,\n            tsv=False)\n    ads = SQLFORM.grid(query=query, deletable=False, editable=False,\n                       orderby=sortorder, paginate=25, exportclasses=exportclasses, maxtextlength=64)\n    return dict(form=ads, user=auth.user)\n\n\n@auth.requires_login()\ndef searchposts():\n    form = SQLFORM.factory(\n                  Field("searchbhar"),\n                  formstyle=\'divs\',\n                  submit_button="Search")\n    searchresults = ()\n    count = 0\n    query = ()\n    if form.process().accepted:\n        keywordvars = form.vars.searchbhar\n        keywords = keywordvars.split(" ")\n        for searchkey in keywords:\n            print "SK" + searchkey\n            query |= db(db.vancouver.adTitle.contains(searchkey) | db.vancouver.adDesc.contains(searchkey))\n    count = db(query).count();\n    searchresults = db(query).select(orderby=~db.vancouver.postCreated)\n    print "SR"\n    print searchresults\n    print count\n    return dict(searchresults=searchresults, count=count, form=form)\n\n@auth.requires_login()\ndef post():\n    form = SQLFORM(db.vancouver, showid=False, hidden=dict(user_id=auth.user_id, isAdValid=1))\n    if form.process().accepted:\n        response.flash = \'form accepted\'\n        createpost(form.vars)\n        # redirect url\n        # send to ad posting controller\n    elif form.errors:\n        response.flash = \'form has errors\'\n    else:\n        response.flash = \'please fill out the form\'\n    return dict(form=form)\n\n\ndef createpost(form):\n    from applications.listEmAlpha.modules.vancouver_poster import post\n    print form\n    post(form, auth.user[\'zip\'])\n    return form\nresponse._vars=response._caller(searchposts)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/Users/sepehrtaheri/PycharmProjects/listEmAlpha/web2py/gluon/restricted.py", line 220, in restricted\n    exec ccode in environment\n  File "/Users/sepehrtaheri/PycharmProjects/listEmAlpha/web2py/applications/listemAlpha/controllers/default.py", line 149, in <module>\n  File "/Users/sepehrtaheri/PycharmProjects/listEmAlpha/web2py/gluon/globals.py", line 385, in <lambda>\n    self._caller = lambda f: f()\n  File "/Users/sepehrtaheri/PycharmProjects/listEmAlpha/web2py/gluon/tools.py", line 3287, in f\n    return action(*a, **b)\n  File "/Users/sepehrtaheri/PycharmProjects/listEmAlpha/web2py/applications/listemAlpha/controllers/default.py", line 122, in searchposts\n    count = db(query).count();\n  File "/Users/sepehrtaheri/PycharmProjects/listEmAlpha/web2py/gluon/dal.py", line 10519, in count\n    return db._adapter.count(self.query,distinct)\n  File "/Users/sepehrtaheri/PycharmProjects/listEmAlpha/web2py/gluon/dal.py", line 1902, in count\n    self.execute(self._count(query, distinct))\n  File "/Users/sepehrtaheri/PycharmProjects/listEmAlpha/web2py/gluon/dal.py", line 1969, in execute\n    return self.log_execute(*a, **b)\n  File "/Users/sepehrtaheri/PycharmProjects/listEmAlpha/web2py/gluon/dal.py", line 1963, in log_execute\n    ret = self.cursor.execute(command, *a[1:], **b)\n  File "/Users/sepehrtaheri/PycharmProjects/listEmAlpha/web2py/gluon/contrib/pymysql/cursors.py", line 117, in execute\n    self.errorhandler(self, exc, value)\n  File "/Users/sepehrtaheri/PycharmProjects/listEmAlpha/web2py/gluon/contrib/pymysql/connections.py", line 202, in defaulterrorhandler\n    raise errorclass, errorvalue\nProgrammingError: (1064, u"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'\' at line 1")\n'
p11
s.